// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name CelloSDK
@_exported import CelloSDK
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public enum SupportedLanguage : Swift.String {
  case en
  case de
  case it
  case nl
  case fr
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct ProductUserDetails {
  public let firstName: Swift.String?
  public let lastName: Swift.String?
  public let fullName: Swift.String?
  public let email: Swift.String?
  public init(firstName: Swift.String? = nil, lastName: Swift.String? = nil, fullName: Swift.String? = nil, email: Swift.String? = nil)
}
@_hasMissingDesignatedInitializers public class Cello {
  public var configuration: [Swift.String : Any]? {
    get
  }
  public static func initialize(for productId: Swift.String, with token: Swift.String, environment: Swift.String? = nil, productUserDetails: CelloSDK.ProductUserDetails? = nil, completion: @escaping (Swift.Result<[Swift.String : Any], CelloSDK.APIError>) -> Swift.Void)
  @available(iOS 14.0, *)
  public static func updateToken(token: Swift.String, completion: @escaping (Swift.Result<[Swift.String : Any], CelloSDK.APIError>) -> Swift.Void)
  public static func showFab()
  public static func hideFab()
  public static func openWidget()
  public static func hideWidget()
  public static func shutdown()
  public static func getActiveUcc() -> [Swift.String : Swift.String]?
  public static func getCampaignConfig() -> [Swift.String : Any]?
  @available(iOS 14.0, *)
  public static func changeLanguage(to language: CelloSDK.SupportedLanguage, completion: ((Swift.Result<Any, any Swift.Error>) -> Swift.Void)? = nil)
  @available(iOS 14.0, *)
  public static func changeLanguage(to language: Swift.String, completion: ((Swift.Result<Any, any Swift.Error>) -> Swift.Void)? = nil)
  @objc deinit
}
extension Foundation.NSNotification.Name {
  public static let CelloTokenAboutToExpire: Foundation.Notification.Name
  public static let CelloTokenHasExpired: Foundation.Notification.Name
}
public enum APIError : Swift.Error {
  case invalidURL(Swift.String)
  case unauthorized
  case requestFailed(Swift.Int, Swift.String)
  case invalidResponseType
  case noDataReceived
  case jsonParsingError(any Swift.Error)
  case invalidState(Swift.String)
}
extension CelloSDK.APIError : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
extension CelloSDK.SupportedLanguage : Swift.Equatable {}
extension CelloSDK.SupportedLanguage : Swift.Hashable {}
extension CelloSDK.SupportedLanguage : Swift.RawRepresentable {}
